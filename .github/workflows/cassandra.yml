name: CI for Cassandra Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      cassandra:
        image: cassandra:4.0
        ports:
          - 9042:9042
        options: >-
          --health-cmd "cqlsh -e 'DESCRIBE KEYSPACES'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for Cassandra to be ready
        run: |
          for i in {1..30}; do
            if docker run --network=host --rm cassandra:4.0 cqlsh -e "DESCRIBE KEYSPACES"; then
              echo "Cassandra is ready!"
              break
            fi
            echo "Waiting for Cassandra..."
            sleep 5
          done

     # - name: Copy schema to container
       # run: docker cp schema.cql $(docker ps -q -f ancestor=cassandra:4.0):/schema.cql
      - name: List files in workspace
        run: ls -la
        


      #- name: Apply schema
        #run: |
          #echo "Applying schema..."
          #docker exec $(docker ps -q -f ancestor=cassandra:4.0) cqlsh -f /schema.cql || (echo "Schema failed to apply!" && exit 1)
          #echo "Schema applied successfully!"
         # sleep 5
      - name: Apply all CQL scripts
        run: |
          for file in $(find . -name '*.cql'); do
          echo "Applying $file..."
          docker cp "$file" $(docker ps -q -f ancestor=cassandra:4.0):/"$(basename $file)"
          docker exec $(docker ps -q -f ancestor=cassandra:4.0) cqlsh -f "/$(basename $file)" || (echo "Failed to apply $file!" && exit 1)
          done


      - name: Check if keyspace exists
        run: docker exec $(docker ps -q -f ancestor=cassandra:4.0) cqlsh -e "DESCRIBE KEYSPACES"

      - name: Install dependencies
        run: pip install -r requirements.txt

      #- name: Run tests
      #  run: pytest test.py
